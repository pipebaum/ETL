Linux Server Setup
1) Install OpenSSH
	sudo apt-get install openssh
	- remove root access over openSSH
	cd /etc/ssh
	ls
	sudo cp sshd_config sshd_config.factory-defaults
	sudo chmod a-w /etc/ssh/sshd_config.factory-defaults
	sudo vi /etc/ssh/sshd_config
	 change: PermitRootLogin yes to PermitRootLogin no

2) Install x11vnc 
		sudo apt-get install x11vnc
		sudo x11vnc -storepasswd /etc/x11vnc.pass
		sudo chmod 600 x11vnc.pass
		create a file in /etc/init
		sudo vi /etc/init/x11vnc.conf
		put the following in there:
start on login-session-start
script
x11vnc -xkb -noxrecord -noxfixes -noxdamage -repeat -display :0 -auth /var/run/lightdm/root/:0 -forever -shared -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900 -allow 192.168.0.53
end script
	
		Run it this time, with: 
		sudo service x11vnc start 	
		
		From now on should always be running
		
		Also change the screen saver, seems to lockup and cause some strange behavior
		sudo apt-get purge light-locker
		sudo apt-get install xscreensaver

3) Download and install mysql server
		sudo apt-get install mysql-server-5.6
		
		Move the location of the databases to a new location
		sudo stop mysql
		sudo cp -rap /var/lib/mysql /etl/mysql
		sudo chown -R mysql:mysql /etl/mysql
		sudo cp /etc/mysql/my.cnf /etc/mysql/my.cnf.orig
		sudo vi /etc/mysql/my.cnf
		 change 
		 datadir         = /etl/mysql
		sudo cp /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/usr.sbin.mysqld.backup
		sudo vi /etc/apparmor.d/usr.sbin.mysqld
		 change
		 /var/lib/mysql to /etl/mysql in two places
		sudo /etc/init.d/apparmor restart

		sudo start mysql
		
		mysql -uroot -p to confirm that you can login.
		
4) Get GIT
		sudo apt-get install git
		
5) Install Oracle JDK, I used JDK 8 and it worked well.
		sudo apt-add-repository ppa:webupd8team/java
		sudo apt-get update
		sudo apt-get install oracle-java8-installer		

6) Install Pentaho /opt/pentaho
		mkdir /opt/pentaho
		copy and unzip pentaho zip file into pdi directory rename data-integration to current version of pdi.
		e.g. /opt/pentaho/pdi-ce-5.3.0.0-213
		go to the directory and run spoon.sh to confirm that it works

7) Create Pentaho user account
		useradd pentaho
		sudo adduser pentaho sudo #adds to sudoer group
		sudo cp -r /home/root/.ssh ~/.
		sudo chown pentaho:pentaho .ssh
		
8) Setup kettle.properties
		mkdir ~/.kettle/
		cp /etl/prod/ETL/kettle.properties ~/.kettle/.
		vi ~/.kettle/kettle.properties
		search for any variables that start with SMP_ and change appropriately
		At this time the configuration properties are:
			SMP_AWS_HOST_IP=54.69.142.168
			SMP_AWS_HOST_PASSPHRASE=simplelabs
			SMP_AWS_HOST_USER=scottr
			SMP_AWS_PEM_FILE=/pdi/SMPLABS_AWSKeyPair.pem
			SMP_DB_USER=root
			SMP_ETL_HOME=/pdi/etl
			SMP_ETL_SCHEMA=smpetl
			
		One standard Kettle property will also need to be updated.
			KETTLE_SHARED_OBJECTS=/pdi/etl/dev_conn.xml  
		where $ETL_HOME = /pdi/etl (adjust for your location as done in step 10 Git clone step)
		

9) Add .pem file to the location specified in 
		We need a .pem file in order to access our AWS instance. 
		All of the Kettle scripts that reference the .pem file use the SMP_AWS_PEM_FILE location specified in 
		step 7. You need to make sure that the file exists at this location.
		I recommend you use a fully qualified path and not a relative path e.g. 
		
		/home/pentaho/.kettle/something.pem 
		is better than
		~/.kettle/something.pem 

10) Clone project into appropriate working directory
		cd /etl/prod
		git clone ""
		chmod pentaho:pentaho /etl/prod/ETL
		
10) The scripts use MySql local-path configurations to connect to MySQL
		info here: http://dev.mysql.com/doc/refman/5.6/en/mysql-config-editor.html
		MySQL has a utility that will allow you to build the required connections which are stored
		for any user that is calling the scripts.
		To simplify things, simply run the $ETL_HOME/scripts/create_config.sh and provide the appropriate
		password.
		NOTE: For bulk load we are using the root user, since all access is local. 
		You may want to change to use a different user. If you do you will need to modify the database config files
		and the mysql-config-editor settings
		
11) Adjust the Kettle dev_conn.xml file.
		Kettle uses shared connections to access the databases when running scripts.
		This file is located in $ETL_HOME/dev_conn.xml (as adjusted in step 8)
		You will need to change the connection properties in this file to point to the appropriate location.
		
		
